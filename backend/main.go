package main

import (
	"fmt"
	"go-backend/routes"
	"log"
	"os"

	"gorm.io/driver/postgres"
	"gorm.io/gorm"
)

var db *gorm.DB

// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PostgreSQL
func connectDB() {
	dsn := os.Getenv("DATABASE_URL") // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°
	var err error
	db, err = gorm.Open(postgres.Open(dsn), &gorm.Config{})

	if err != nil {
		log.Fatal("‚ùå Failed to connect to database:", err)
	}

	log.Println("‚úÖ Connected to Neon PostgreSQL!")
}

func main() {
	connectDB() // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

	// ‡∏™‡∏£‡πâ‡∏≤‡∏á Router ‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö routes.go
	sqlDB, err := db.DB()
	if err != nil {
		log.Fatal("‚ùå Failed to get *sql.DB from *gorm.DB:", err)
	}
	r := routes.Router(sqlDB)

	// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏û‡∏≠‡∏£‡πå‡∏ï (‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å ENV ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
	port := os.Getenv("PORT")
	if port == "" {
		port = "10000" // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
	}

	fmt.Println("üöÄ Server is running on port:", port)
	r.Run(":" + port) // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
}
